{"version":3,"sources":["src/state.js","src/validators.js","src/index.js"],"names":["createWatcher","watchExpression","listener","state","value","oldValue","run","newState","newValue","State","initial","watchers","watcher","push","forEach","createState","initialState","Proxy","set","target","prop","digest","isRequired","message","appState","firstName","el","document","querySelector","firstNameInput","lastNameInput","setUpInputHandler","inputEl","validator","valid","classList","add","addEventListener","event","remove","watch","val","textContent"],"mappings":";AAoCO,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,OAAA,eAAA,EAAA,YAAA,CAAA,UAAA,IAAA,EApCP,SAASA,EAAcC,EAAiBC,EAAUC,GAC5CC,IAAAA,EAAQH,EAAgBE,GAC5BD,EAASE,EAAO,KAAMD,GAElBE,IAAAA,EAAWD,EAER,MAAA,CACLE,IAAIC,SAAAA,GACIC,IAAAA,EAAWP,EAAgBM,GAE7BF,IAAaG,IACfN,EAASM,EAAUH,EAAUE,GAE7BF,EAAWG,KAuBZ,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA,EAjBDC,IAAAA,EAAAA,WACQC,SAAAA,EAAAA,GAAS,EAAA,KAAA,GACdP,KAAAA,MAAQO,EACRC,KAAAA,SAAW,GAcb,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAXL,MAAA,SAAMC,EAASV,GACRS,KAAAA,SAASE,KAAKb,EAAcY,EAASV,EAAU,KAAKC,UAUtD,CAAA,IAAA,SAPL,MAAA,WAAS,IAAA,EAAA,KACFQ,KAAAA,SAASG,QAAQ,SAACF,GACrBA,EAAQN,IAAI,EAAKH,aAKhB,EAjBDM,GAiBOM,EAAc,SAACC,GACpBb,IAAAA,EAAQ,IAAIM,EAAMO,GAEjB,OAAA,IAAIC,MAAMd,EAAO,CACtBe,IAAIC,SAAAA,EAAQC,EAAMhB,GAIT,OAHPe,EAAOhB,MAAMiB,GAAQhB,EACrBe,EAAOE,UAEA,MARN,QAAA,YAAA;;AC9BN,aANM,SAASC,EAAWlB,GACrBA,OAAAA,EAAc,KAEX,CACLmB,QAAS,2BAEZ,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,WAAA;;;;AC4CA,aAlDD,IAAA,EAAA,QAAA,WACA,EAAA,QAAA,gBACA,QAAA,gBAEA,IAAMC,GAAW,EAAY,EAAA,aAAA,CAC3BC,UAAW,KAGPC,EAAKC,SAASC,cAAc,QAC5BC,EAAiBF,SAASC,cAAc,eACxCE,EAAgBH,SAASC,cAAc,cAE7C,GAAIF,GAAMG,GAAkBC,EAAe,CAUhCC,IAAAA,EAAT,SAA2BC,EAASZ,EAAMa,GACpCC,IAAAA,EAAQD,EAAUT,EAASJ,IAE1Bc,GACHF,EAAQG,UAAUC,IAAI,SAexBJ,EAAQK,iBAAiB,QAAS,SAACC,GAZpB,IAAClC,EAadoB,EAASJ,GAAQkB,EAAMnB,OAAOf,MAbhBA,EAcPkC,EAAMnB,OAAOf,OAbpB8B,EAAQD,EAAU7B,IAGhB4B,EAAQG,UAAUC,IAAI,SAEtBJ,EAAQG,UAAUI,OAAO,SAG3BP,EAAQG,UAAUC,IAAI,WAQxBJ,EAAQK,iBAAiB,OAAQ,SAACC,GAChCN,EAAQG,UAAUC,IAAI,cAlC1BZ,EAASgB,MACP,SAACrC,GAAUA,OAAAA,MAAAA,OAAAA,EAAAA,EAAOsB,WAClB,SAACgB,GACCf,EAAGgB,YAAcD,IAGrBV,EAAkBF,EAAgB,YAAaP,EAA9B,YACjBS,EAAkBD,EAAe,WAAYR,EAA5B","file":"src.e4b42aba.js","sourceRoot":"..","sourcesContent":["function createWatcher(watchExpression, listener, state) {\n  let value = watchExpression(state);\n  listener(value, null, state);\n\n  let oldValue = value;\n\n  return {\n    run(newState) {\n      const newValue = watchExpression(newState);\n\n      if (oldValue !== newValue) {\n        listener(newValue, oldValue, newState);\n        // store old value within the closure\n        oldValue = newValue;\n      }\n    }\n  };\n}\n\nclass State {\n  constructor(initial) {\n    this.state = initial;\n    this.watchers = [];\n  }\n\n  watch(watcher, listener) {\n    this.watchers.push(createWatcher(watcher, listener, this.state));\n  }\n\n  digest() {\n    this.watchers.forEach((watcher) => {\n      watcher.run(this.state);\n    });\n  }\n}\n\nexport const createState = (initialState) => {\n  const state = new State(initialState);\n\n  return new Proxy(state, {\n    set(target, prop, value) {\n      target.state[prop] = value;\n      target.digest();\n\n      return true;\n    }\n  });\n};\n","export function isRequired(value) {\n  if (value) return null;\n\n  return {\n    message: \"value must not be empty\"\n  };\n}\n","import { createState } from \"./state\";\nimport { isRequired } from \"./validators\";\nimport \"./styles.css\";\n\nconst appState = createState({\n  firstName: \"\"\n});\n\nconst el = document.querySelector(\"#foo\");\nconst firstNameInput = document.querySelector(\"#first-name\");\nconst lastNameInput = document.querySelector(\"#last-name\");\n\nif (el && firstNameInput && lastNameInput) {\n  appState.watch(\n    (state) => state?.firstName,\n    (val) => {\n      el.textContent = val;\n    }\n  );\n  setUpInputHandler(firstNameInput, \"firstName\", isRequired);\n  setUpInputHandler(lastNameInput, \"lastName\", isRequired);\n\n  function setUpInputHandler(inputEl, prop, validator) {\n    let valid = validator(appState[prop]);\n\n    if (!valid) {\n      inputEl.classList.add(\"error\");\n    }\n\n    const update = (value) => {\n      valid = validator(value);\n\n      if (valid) {\n        inputEl.classList.add(\"error\");\n      } else {\n        inputEl.classList.remove(\"error\");\n      }\n\n      inputEl.classList.add(\"dirty\");\n    };\n\n    inputEl.addEventListener(\"input\", (event) => {\n      appState[prop] = event.target.value;\n      update(event.target.value);\n    });\n\n    inputEl.addEventListener(\"blur\", (event) => {\n      inputEl.classList.add(\"touched\");\n    });\n  }\n}\n"]}